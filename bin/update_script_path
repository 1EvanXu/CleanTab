#!/bin/bash

current_path=`pwd`;

prod_dir=$current_path;

project_name="CleanTab"

dist_dir="clean-tab-prod";

if [[ $current_path != */$project_name ]];then
    echo "Current path: $current_path invalid."
    exit 1;
fi

if [[ $current_path == */$project_name/bin ]];then
    prod_dir="${current_dir}/.."
fi

function rename_assets_files() {
    local assets_dir=${prod_dir}/$dist_dir/$1/assets

    cd $assets_dir;

    local files=($(ls ./))

    for file in ${files[*]};
    do
        if [[ $file == index-*.css ]];then
            mv $file "./$2.css"
        fi

        if [[ $file == index-*.js ]];then
            mv $file "./$2.js"
        fi
    done
}

function update_index_html() {
    local html_path=${prod_dir}/$dist_dir/$1/index.html;

    if [ ! -f $html_path ];then
        return 1;
    fi
    sed -i '' 's|'href=\"/favicon.ico\"'|'href="favicon.ico"'|g' $html_path
    sed -i '' 's|/assets/.*\.js|'assets/${2}.js'|g' $html_path
    sed -i '' 's|/assets/.*\.css|'assets/${2}.css'|g' $html_path
}

function get_file_change_time() {
    local target_file=${prod_dir}/$dist_dir/$1/index.html
    local info=($(ls -lc ${target_file}))
    local len=${#info[@]}
    if [ len > 1 ];then
        echo ${info[len-2]}
    fi 
}


pre_change_time=$(get_file_change_time popup)

echo "文件自动更新任务启动 🚀 🚀 🚀"
while true
do
    cur_change_time=$(get_file_change_time popup)
    if [[ $pre_change_time != $cur_change_time ]];then
        echo ""
        echo "➡️ 检测到文件改变."
        echo "➡️ 执行assets重命名."
        rename_assets_files popup popup;
        echo "➡️ 更新index.html"
        update_index_html popup popup;
        pre_change_time=$cur_change_time
    fi
    sleep 3
done

